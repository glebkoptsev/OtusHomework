name: otus-homework-env

networks:
  main-network:
    driver: bridge

services:
  otushomework:
    container_name: otushomework
    image: gkoptsev/otushomework:latest
    build:
      context: .
      dockerfile: otushomework/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - main-network
    depends_on:
      - postgres_db
      - redis
      - kafka
    restart: always

  postgres_db:
    container_name: otushomework_postgres
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7g0WfNsQziV5r5P
      POSTGRES_DB: otushomework
    ports:
      - "5432:5432"
    networks: 
      - main-network
    volumes:
      - ./volumes/pgmaster:/var/lib/postgresql/data
    restart: always
    
  postgres_slave_first:
    container_name: otushomework_postgres_slave_first
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7g0WfNsQziV5r5P
      POSTGRES_DB: otushomework
    ports:
      - "5431:5432"
    networks: 
      - main-network
    volumes:
      - ./volumes/pgslave:/var/lib/postgresql/data
    restart: always 

  postgres_slave_second:
    container_name: otushomework_postgres_slave_second
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 7g0WfNsQziV5r5P
      POSTGRES_DB: otushomework
    ports:
      - "5430:5432"
    networks: 
      - main-network
    volumes:
      - ./volumes/pgslave_sec:/var/lib/postgresql/data
    restart: always      

  redis:
    image: redis:7.4.0
    container_name: otushomework_redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redisdata:/data
    networks:
      - main-network
    restart: always
    
  otushomework_cache_warmup:
    container_name: otushomework_cache_warmup
    image: gkoptsev/otushomework_cache_warmup:latest
    build:
      context: .
      dockerfile: OtusHomework.Ð¡acheWarmup/Dockerfile
    networks:
      - main-network
    depends_on:
      - postgres_db
      - redis

  otushomework_cache_update_service:
    container_name: otushomework_cache_update_service
    image: gkoptsev/otushomework_cache_update_service:latest
    build:
      context: .
      dockerfile: OtusHomework.CacheUpdateService/Dockerfile
    networks:
      - main-network
    depends_on:
      - postgres_db
      - redis
      - kafka
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: otushomework_zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - main-network
    restart: always
   
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: otushomework_kafka
    depends_on:
      - zookeeper
    networks:
      - main-network
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always
